# Generated by Django 4.0.6 on 2022-07-14 22:12

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('players', '0006_alter_player_id_capology_alter_player_id_fbref_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('extraction_date', models.DateField(verbose_name='Fecha de extracción')),
                ('season', models.CharField(max_length=30, verbose_name='Temporada')),
                ('team', models.CharField(blank=True, max_length=50, verbose_name='Equipo')),
                ('team_date_joined', models.DateField(blank=True, null=True, verbose_name='Fecha de inicio de contrato')),
                ('team_contract_expires', models.DateField(blank=True, null=True, verbose_name='Fecha de fin de contrato')),
                ('competition', models.CharField(max_length=50, verbose_name='Competición')),
                ('ca_salary', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tm_current_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('matches_played', models.IntegerField(blank=True, default=0, verbose_name='Partidos jugados')),
                ('matches_starts', models.IntegerField(blank=True, default=0, verbose_name='Partidos titular')),
                ('minutes_played', models.IntegerField(blank=True, default=0, verbose_name='Minutos jugados')),
                ('minutes_per_match', models.IntegerField(blank=True, default=0, verbose_name='Minutos por partido')),
                ('perc_minutes_played', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de minutos jugados')),
                ('complete_matches_played', models.IntegerField(blank=True, default=0, verbose_name='Partidos completos')),
                ('matches_as_substitute', models.IntegerField(blank=True, default=0, verbose_name='Partidos jugados como suplente')),
                ('mean_minutes_starts', models.IntegerField(blank=True, default=0, verbose_name='Media de minutos cuando es titular')),
                ('mean_minutes_substitute', models.IntegerField(blank=True, default=0, verbose_name='Media de minutos cuando es suplente')),
                ('playing_time_90s', models.FloatField(blank=True, default=0, verbose_name='Minutos entre 90')),
                ('goals', models.IntegerField(blank=True, default=0, verbose_name='Goles')),
                ('assists', models.IntegerField(blank=True, default=0, verbose_name='Asistencias')),
                ('non_penalty_goals', models.IntegerField(blank=True, default=0, verbose_name='Goles sin penaltis')),
                ('penalty_goals', models.IntegerField(blank=True, default=0, verbose_name='Penaltis marcados')),
                ('penalty_shoots', models.IntegerField(blank=True, default=0, verbose_name='Penaltis lanzados')),
                ('goals_plus_assists_minus_pk', models.FloatField(blank=True, default=0, verbose_name='Goles más asistencias sin penaltis')),
                ('expected_goals', models.FloatField(blank=True, default=0, verbose_name='Goles esperados')),
                ('npxg', models.FloatField(blank=True, default=0, verbose_name='Goles esperados sin penaltis')),
                ('expected_assists', models.FloatField(blank=True, default=0, verbose_name='Asistencias esperadas')),
                ('npxg_plus_expected_assists', models.FloatField(blank=True, default=0, verbose_name='npxG más asistencias esperadas')),
                ('goals_90', models.FloatField(blank=True, default=0, verbose_name='Goles por 90 minutos')),
                ('assists_90', models.FloatField(blank=True, default=0, verbose_name='Asistencias por 90 minutos')),
                ('goals_plus_assists_90', models.FloatField(blank=True, default=0, verbose_name='Goles y asistencias por 90 minutos')),
                ('expected_goals_90', models.FloatField(blank=True, default=0, verbose_name='Goles esperados por 90 minutos')),
                ('expected_assists_90', models.FloatField(blank=True, default=0, verbose_name='Asistencias esperadas por 90 minutos')),
                ('npxg_90', models.FloatField(blank=True, default=0, verbose_name='Goles esperados sin penaltis por 90 minutos')),
                ('npxg_plus_expected_assists_90', models.FloatField(blank=True, default=0, verbose_name='npxG más asistencias esperadas por 90 minutos')),
                ('assists_minus_xA', models.FloatField(blank=True, default=0, verbose_name='Asistencias menos asistencias esperadas')),
                ('shoots', models.IntegerField(blank=True, default=0, verbose_name='Tiros')),
                ('shoots_on_target', models.IntegerField(blank=True, default=0, verbose_name='Tiros a puerta')),
                ('perc_shoots_on_target', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de tiros a puerta')),
                ('shoots_90', models.FloatField(blank=True, default=0, verbose_name='Tiros por 90 minutos')),
                ('shoots_on_target_90', models.FloatField(blank=True, default=0, verbose_name='Tiros a puerta por 90 minutos')),
                ('goals_per_shoot', models.FloatField(blank=True, default=0, verbose_name='Goles por tiro')),
                ('goals_per_shoot_on_target', models.FloatField(blank=True, default=0, verbose_name='Goles por tiro a puerta')),
                ('mean_distance_from_goals_shoots', models.FloatField(blank=True, default=0, verbose_name='Distancia media de los goles')),
                ('free_kicks_shooted', models.IntegerField(blank=True, default=0, verbose_name='Faltas lanzadas')),
                ('npxg_per_shoot', models.FloatField(blank=True, default=0, verbose_name='npxG por tiro')),
                ('goals_minus_expected_goals', models.FloatField(blank=True, default=0, verbose_name='Goles menos coles esperados')),
                ('passes_completed', models.IntegerField(blank=True, default=0, verbose_name='Pases completados')),
                ('passes_attempted', models.IntegerField(blank=True, default=0, verbose_name='Pases intentados')),
                ('perc_passes', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de pases completados')),
                ('total_distance_passes', models.IntegerField(blank=True, default=0, verbose_name='Distancia total en pases')),
                ('total_distance_progressive_passes', models.IntegerField(blank=True, default=0, verbose_name='Distancia total en pases progresivos')),
                ('short_passes_completed', models.IntegerField(blank=True, default=0, verbose_name='Pases cortos completados')),
                ('short_passes_attempted', models.IntegerField(blank=True, default=0, verbose_name='Pases cortos intentados')),
                ('perc_short_passes', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de pases cortos completados')),
                ('medium_passes_completed', models.IntegerField(blank=True, default=0, verbose_name='Pases medios completados')),
                ('medium_passes_attempted', models.IntegerField(blank=True, default=0, verbose_name='Pases medios intentados')),
                ('perc_medium_passes', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de pases medios completados')),
                ('long_passes_completed', models.IntegerField(blank=True, default=0, verbose_name='Pases largos completados')),
                ('long_passes_attempted', models.IntegerField(blank=True, default=0, verbose_name='Pases largos intentados')),
                ('perc_long_passes', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de apses largos completados')),
                ('key_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases clave')),
                ('last_third_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases al último tercio')),
                ('ppa', models.IntegerField(blank=True, default=0, verbose_name='Pases completados al área (PPA)')),
                ('crosses_pa', models.IntegerField(blank=True, default=0, verbose_name='Centros completados al área')),
                ('progresive_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases progresivos completados')),
                ('progresive_passes_attempted', models.IntegerField(blank=True, default=0, verbose_name='Pases prograsivos intentados')),
                ('live_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases en juego')),
                ('dead_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases desde juego parado')),
                ('free_kick_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases de falta')),
                ('to_back_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases al espacio')),
                ('pressed_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases bajo presión de rival')),
                ('swap_passes', models.IntegerField(blank=True, default=0, verbose_name='Cambios de juego horizontal')),
                ('crosses', models.IntegerField(blank=True, default=0, verbose_name='Centros')),
                ('corner_kicks', models.IntegerField(blank=True, default=0, verbose_name='Lanzamientos de corner')),
                ('corner_kicks_in', models.IntegerField(blank=True, default=0, verbose_name='Corners al área')),
                ('corner_kicks_out', models.IntegerField(blank=True, default=0, verbose_name='Corners en corto')),
                ('corner_kicks_straight', models.IntegerField(blank=True, default=0, verbose_name='Corners directos')),
                ('ground_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases rasos')),
                ('low_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases a baja altura')),
                ('high_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases por alto')),
                ('left_foot_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases con la izquierda')),
                ('right_foot_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases con la derecha')),
                ('head_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases con la cabeza')),
                ('throw_in_passes', models.IntegerField(blank=True, default=0, verbose_name='Saques de banda')),
                ('other_body_parts_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases con otras partes del cuerpo')),
                ('offsides_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases que son fuera de juego')),
                ('out_off_bound_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases que salen fuera')),
                ('intercepted_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases que son interceptados')),
                ('blocked_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases que son bloqueados')),
                ('sca', models.IntegerField(blank=True, default=0, verbose_name='Acciones que crean tiro')),
                ('sca_90', models.FloatField(blank=True, default=0, verbose_name='Acciones que crean tiro por 90 minutos')),
                ('sca_live_pass', models.IntegerField(blank=True, default=0, verbose_name='SCA desde pases en juego')),
                ('sca_dead_pass', models.IntegerField(blank=True, default=0, verbose_name='SCA desde juego parado')),
                ('sca_dribbling', models.IntegerField(blank=True, default=0, verbose_name='SCA desde regate')),
                ('sca_another_shoot', models.IntegerField(blank=True, default=0, verbose_name='SCA desde otro tiro')),
                ('sca_foul_drawn', models.IntegerField(blank=True, default=0, verbose_name='SCA desde falta provocada')),
                ('sca_defensive_action', models.IntegerField(blank=True, default=0, verbose_name='SCA desde acción defensiva')),
                ('gca', models.IntegerField(blank=True, default=0, verbose_name='Acciones que crean gol')),
                ('gca_90', models.FloatField(blank=True, default=0, verbose_name='Acciones que crean gol por 90 minutos')),
                ('gca_live_pass', models.IntegerField(blank=True, default=0, verbose_name='GCA desde pases en juego')),
                ('gca_dead_pass', models.IntegerField(blank=True, default=0, verbose_name='GCA desde juego parado')),
                ('gca_dribbling', models.IntegerField(blank=True, default=0, verbose_name='GCA desde regate')),
                ('gca_another_shoot', models.IntegerField(blank=True, default=0, verbose_name='GCA desde otro tiro')),
                ('gca_foul_drawn', models.IntegerField(blank=True, default=0, verbose_name='GCA desde falta provocada')),
                ('gca_defensive_action', models.IntegerField(blank=True, default=0, verbose_name='GCA desde acción defensiva')),
                ('tackles', models.IntegerField(blank=True, default=0, verbose_name='Entradas')),
                ('tackles_wins', models.IntegerField(blank=True, default=0, verbose_name='Entradas ganadas')),
                ('tackles_def_third', models.IntegerField(blank=True, default=0, verbose_name='Entradas en tercio defensivo')),
                ('tackles_mid_third', models.IntegerField(blank=True, default=0, verbose_name='Entradas en tercio medio')),
                ('tackles_att_third', models.IntegerField(blank=True, default=0, verbose_name='Entradas en tercio atacante')),
                ('tackles_vs_dribbles_wins', models.IntegerField(blank=True, default=0, verbose_name='Entradas ganadas contra regates')),
                ('tackles_vs_dribbles_attempted', models.IntegerField(blank=True, default=0, verbose_name='Entradas contra regates')),
                ('perc_tackles_vs_dribbles', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de entradas ganadas contra regates')),
                ('pressures', models.IntegerField(blank=True, default=0, verbose_name='Presiones')),
                ('pressures_success', models.IntegerField(blank=True, default=0, verbose_name='Presiones exitosas')),
                ('perc_pressures_success', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de presiones exitosas')),
                ('pressures_def_third', models.IntegerField(blank=True, default=0, verbose_name='Presiones en tercio defensivo')),
                ('pressures_mid_third', models.IntegerField(blank=True, default=0, verbose_name='Presiones en tercio medio')),
                ('pressures_att_third', models.IntegerField(blank=True, default=0, verbose_name='Presiones en tercio atacante')),
                ('blocks', models.IntegerField(blank=True, default=0, verbose_name='Bloqueos')),
                ('blocks_shoots', models.IntegerField(blank=True, default=0, verbose_name='Tiros bloqueados')),
                ('blocks_shoots_on_target', models.IntegerField(blank=True, default=0, verbose_name='Tiros a puerta bloqueados')),
                ('blocks_passes', models.IntegerField(blank=True, default=0, verbose_name='Pases bloqueados')),
                ('interceptions', models.IntegerField(blank=True, default=0, verbose_name='Intercepciones')),
                ('tackles_plus_interceptions', models.IntegerField(blank=True, default=0, verbose_name='Entradas mas intercepciones')),
                ('clearances', models.IntegerField(blank=True, default=0, verbose_name='Despejes')),
                ('errors_to_rival_shoot', models.IntegerField(blank=True, default=0, verbose_name='Errores que provocan tiro rival')),
                ('aerial_duels_won', models.IntegerField(blank=True, default=0, verbose_name='Duelos aéreos ganados')),
                ('aerial_duels_lost', models.IntegerField(blank=True, default=0, verbose_name='Duelos aéreos perdidos')),
                ('perc_aerial_duels_won', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de duelos aéreos ganados')),
                ('touches', models.IntegerField(blank=True, default=0, verbose_name='Toques')),
                ('touches_def_box', models.IntegerField(blank=True, default=0, verbose_name='Toques en área propia')),
                ('touches_def_third', models.IntegerField(blank=True, default=0, verbose_name='Toques en tercio defensivo')),
                ('touches_mid_third', models.IntegerField(blank=True, default=0, verbose_name='Toques en tercio medio')),
                ('touches_att_third', models.IntegerField(blank=True, default=0, verbose_name='Toques en tercio atacante')),
                ('touches_att_box', models.IntegerField(blank=True, default=0, verbose_name='Toques en área rival')),
                ('dribbles_success', models.IntegerField(blank=True, default=0, verbose_name='Regates exitosos')),
                ('dribbles_attempted', models.IntegerField(blank=True, default=0, verbose_name='Regates intentados')),
                ('perc_dribbles_success', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de regates exitosos')),
                ('number_players_dribbled', models.IntegerField(blank=True, default=0, verbose_name='Jugadores regateados')),
                ('dribbles_megs', models.IntegerField(blank=True, default=0, verbose_name='Regates con caño')),
                ('carries', models.IntegerField(blank=True, default=0, verbose_name='Conducciones')),
                ('distance_carries', models.IntegerField(blank=True, default=0, verbose_name='Distancia en conducción')),
                ('progressive_distance_carries', models.IntegerField(blank=True, default=0, verbose_name='Distancia en conducciones progresivas')),
                ('progressive_carries', models.IntegerField(blank=True, default=0, verbose_name='Conducciones progresivas')),
                ('carries_last_third', models.IntegerField(blank=True, default=0, verbose_name='Conducciones hasta el tercio atacante')),
                ('carries_to_att_box', models.IntegerField(blank=True, default=0, verbose_name='Conducciones hasta área rival')),
                ('carries_missed', models.IntegerField(blank=True, default=0, verbose_name='Conducciones con pérdida por mal control')),
                ('carries_intercepted', models.IntegerField(blank=True, default=0, verbose_name='Conducciones con pérdida por robo rival')),
                ('receiving_target', models.IntegerField(blank=True, default=0, verbose_name='Objetivo de pases')),
                ('receiving_target_success', models.IntegerField(blank=True, default=0, verbose_name='Objetivo de pases con éxito')),
                ('perc_receiving_target_success', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de objetivo de pases con éxito')),
                ('receiving_target_progressive', models.IntegerField(blank=True, default=0, verbose_name='Objetivo de pases progresivos')),
                ('yellow_cards', models.IntegerField(blank=True, default=0, verbose_name='Tarjetas amarillas')),
                ('red_cards', models.IntegerField(blank=True, default=0, verbose_name='Tarjetas rojas')),
                ('double_yellow_cards', models.IntegerField(blank=True, default=0, verbose_name='Dobles tarjetas amarillas')),
                ('fouls', models.IntegerField(blank=True, default=0, verbose_name='Faltas')),
                ('fouls_drawn', models.IntegerField(blank=True, default=0, verbose_name='Faltas provocadas')),
                ('offsides', models.IntegerField(blank=True, default=0, verbose_name='Fueras de juego')),
                ('penalties_wons', models.IntegerField(blank=True, default=0, verbose_name='Penatis provocados')),
                ('penalties_conceded', models.IntegerField(blank=True, default=0, verbose_name='Penaltis cometidos')),
                ('own_goals', models.IntegerField(blank=True, default=0, verbose_name='Goles en propia puerta')),
                ('recoveries', models.IntegerField(blank=True, default=0, verbose_name='Recuperaciones')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player', verbose_name='Jugador')),
            ],
            options={
                'verbose_name': 'Estadísticas del jugador',
                'verbose_name_plural': 'Estadísticas de los jugadores',
            },
        ),
        migrations.CreateModel(
            name='GoalkeeperStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('extraction_date', models.DateField(verbose_name='Fecha de extracción')),
                ('season', models.CharField(max_length=30, verbose_name='Temporada')),
                ('team', models.CharField(blank=True, max_length=50, verbose_name='Equipo')),
                ('team_date_joined', models.DateField(blank=True, null=True, verbose_name='Fecha de inicio de contrato')),
                ('team_contract_expires', models.DateField(blank=True, null=True, verbose_name='Fecha de fin de contrato')),
                ('competition', models.CharField(max_length=50, verbose_name='Competición')),
                ('ca_salary', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tm_current_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('matches_played', models.IntegerField(blank=True, default=0, verbose_name='Partidos jugados')),
                ('matches_starts', models.IntegerField(blank=True, default=0, verbose_name='Partidos titular')),
                ('minutes_played', models.IntegerField(blank=True, default=0, verbose_name='Minutos jugados')),
                ('minutes_per_match', models.IntegerField(blank=True, default=0, verbose_name='Minutos por partido')),
                ('perc_minutes_played', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de minutos jugados')),
                ('complete_matches_played', models.IntegerField(blank=True, default=0, verbose_name='Partidos completos')),
                ('matches_as_substitute', models.IntegerField(blank=True, default=0, verbose_name='Partidos jugados como suplente')),
                ('mean_minutes_starts', models.IntegerField(blank=True, default=0, verbose_name='Media de minutos cuando es titular')),
                ('mean_minutes_substitute', models.IntegerField(blank=True, default=0, verbose_name='Media de minutos cuando es suplente')),
                ('playing_time_90s', models.FloatField(blank=True, default=0, verbose_name='Minutos entre 90')),
                ('assists', models.IntegerField(blank=True, default=0, verbose_name='Asistencias')),
                ('expected_assists', models.FloatField(blank=True, default=0, verbose_name='Asistencias esperadas')),
                ('assists_90', models.FloatField(blank=True, default=0, verbose_name='Asistencias por 90 minutos')),
                ('expected_assists_90', models.FloatField(blank=True, default=0, verbose_name='Asistencias esperadas por 90 minutos')),
                ('goals_against', models.IntegerField(blank=True, default=0, verbose_name='Goles en contra')),
                ('goals_against_90', models.FloatField(blank=True, default=0, verbose_name='Goles en contra por 90 minutos')),
                ('shoots_on_target_against', models.IntegerField(blank=True, default=0, verbose_name='Tiros a puerta en contra')),
                ('saves', models.IntegerField(blank=True, default=0, verbose_name='Paradas')),
                ('perc_saves', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de paradas')),
                ('clear_scores', models.IntegerField(blank=True, default=0, verbose_name='Porterias a cero')),
                ('perc_clear_scores', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de porterias a cero')),
                ('penalty_against', models.IntegerField(blank=True, default=0, verbose_name='Penaltis en contra')),
                ('penalty_saves', models.IntegerField(blank=True, default=0, verbose_name='Penaltis parados')),
                ('perc_penalty_saves', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de penaltis parados')),
                ('psxg', models.FloatField(blank=True, default=0, verbose_name='PSxG')),
                ('psxg_per_shoots', models.FloatField(blank=True, default=0, verbose_name='PSxG por tiro a puerta')),
                ('psxg_diference', models.FloatField(blank=True, default=0, verbose_name='Diferencia de PSxG')),
                ('launches_completed', models.IntegerField(blank=True, default=0, verbose_name='Lanzamuentos completados')),
                ('launches_attempted', models.IntegerField(blank=True, default=0, verbose_name='Lanzamientos realizados')),
                ('perc_launches_completed', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de lanzamientos intentados')),
                ('passes_attempted', models.IntegerField(blank=True, default=0, verbose_name='Pases realizados')),
                ('average_lenght_passes', models.FloatField(blank=True, default=0, verbose_name='Distancia media de los pases')),
                ('goal_kicks_attempted', models.IntegerField(blank=True, default=0, verbose_name='Saques de puerta realizados')),
                ('perc_goal_kicks_completed', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de saques de puerta completados')),
                ('average_lenght_goal_kick', models.FloatField(blank=True, default=0, verbose_name='Distancia media de los saques de puerta')),
                ('opponent_crosses', models.IntegerField(blank=True, default=0, verbose_name='Centros del rival')),
                ('opponent_crosses_stopped', models.IntegerField(blank=True, default=0, verbose_name='Centros del rival parados')),
                ('perc_opponent_crosses_stopped', models.FloatField(blank=True, default=0, verbose_name='Porcentaje de centros del rival parados')),
                ('sweeper_opa', models.FloatField(blank=True, default=0, verbose_name='Salidas del área')),
                ('sweeper_opa_90', models.FloatField(blank=True, default=0, verbose_name='Salidas del área por 90 minutos')),
                ('average_distance_sweeper', models.FloatField(blank=True, default=0, verbose_name='Distancia media de las salidas del área')),
                ('yellow_cards', models.IntegerField(blank=True, default=0, verbose_name='Tarjetas amarillas')),
                ('red_cards', models.IntegerField(blank=True, default=0, verbose_name='Tarjetas rojas')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player', verbose_name='Jugador')),
            ],
            options={
                'verbose_name': 'Estadísticas del portero',
                'verbose_name_plural': 'Estadísticas de los porteros',
            },
        ),
    ]
